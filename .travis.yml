---
sudo: required
env:
  global:
    - ARTIFACT_NAME="testing-in-travisci-by-ansible.tz"
  - distribution: ubuntu
    version: trusty

branches:
    only:
      - master

services:
  - docker

before_install:
  - openssl aes-256-cbc -K $encrypted_3f2dabfde256_key -iv $encrypted_3f2dabfde256_iv -in travis_key.enc -out /tmp/travis_key -d
  - eval "$(ssh-agent -s)"
  - chmod 600 /tmp/travis_key
  - ssh-add /tmp/travis_key
  - 'sudo docker pull ${distribution}:${version}'
  - 'sudo docker build --no-cache --rm --file=travis/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible travis'

script:
  - container_id=$(mktemp)
  - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/etc/ansible/roles/nginx_role:ro ${distribution}-${version}:ansible > "${container_id}"'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/nginx_role/travis/test.yml --syntax-check'
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/nginx_role/travis/test.yml'
  - >
    sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v /etc/ansible/roles/nginx_role/travis/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)
  - 'sudo docker rm -f "$(cat ${container_id})"'

after_script:
  - ssh -o "StrictHostKeyChecking no" ansible@3.10.209.77 'ansible-playbook -i hosts.yml --tags "ping" playbook.yml'
  - ssh -o "StrictHostKeyChecking no" ansible@3.10.209.77 'ansible-playbook -i hosts.yml --tags "set_vars, clone_gitrepo" playbook.yml'

before_deploy:
  - mkdir -p tmp && tar -czvf "tmp/$ARTIFACT_NAME" . --exclude ".git" --exclude "tmp"
  - . ./tmp/tagrelease.sh

deploy:
  - provider: releases
    api_key: "$GITHUB_OAUTH_TOKEN"
    file: "tmp/$ARTIFACT_NAME"
    skip_cleanup: true
    on:
      branch: master

